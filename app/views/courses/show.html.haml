- content_for :title do
    Ertex47Project
    \|
    =@course.title

= link_to 'Courses', courses_path, class: "white_link"
\|
= link_to course_path(@course), class: "white_link" do
    .fa.fa-graduation-cap
    =@course.title
    
%p

.row
    .col-lg-8.order-1.order-lg-1
        .jumbotron
            %h3
                .fa.fa-graduation-cap
                =@course.title
                .row
                /=@course.avatar.attached?
                /-if @course.avatar.attached?
                /    =image_tag @course.avatar, width: "200px"
            .p-2
            .row
            .fa.fa-clock
            Last updated
            =@course.updated_at.strftime("%m/%Y")
            .row
            .fa.fa-globe-africa
            =@course.language
            .row
            .fa.fa-signal
            =@course.level 
            .p-2     
            =@course.description
        
        %h4 
            .fa.fa-tasks
            =pluralize(@course.lessons_count, 'lesson')
            /=@course.lessons_count
            /Lessons:
            .float-right
                .fa.fa-spinner
                =number_to_percentage(@course.progress(current_user), precision: 0)
        %ul.list-group.lesson-sortable        
            - @lessons.each do |lesson|
                = content_tag "div", id: "lesson-#{lesson.id}", data: { model_name: lesson.class.name.underscore, update_url: course_lesson_sort_path(@course, lesson)} do
                    %li.list-group-item
                        =render 'lessons/lesson_preview', lesson: lesson
        %p 
        
        %h4 
            .fa.fa-comment
            =pluralize(@enrollments_with_review.count, 'review')
            /Reviews:
            /= @enrollments_with_review.count
        - @enrollments_with_review.each do |enrollment|
            = render 'enrollments/enrollment', enrollment: enrollment
            %p
    .col-lg-4.order-0.order-lg-1
        .sticky-top
            = render 'courses/course', course: @course
        %p
%h4 
    .fa.fa-graduation-cap
    Похожие курсы
/.badge.badge-info
/    = @course.tags.pluck(:name, :id)
.row
/All course tags
- Course.all.where.not(id: @course.id).each do |course|
    .row
    - unless @course.tags.pluck(:id).intersection(course.tags.pluck(:id)).count.zero?
        .card-columns
            = render 'courses/course', course: course
